---
import { type CollectionEntry } from "astro:content";
import FormattedDate from "@/components/FormattedDate.astro";
import Typo from "@/components/Typo.astro";
import { Image } from "astro:assets";
import Badge from "@/components/badge/Badge.astro";
type PostEntry = CollectionEntry<"blog">;

interface Props {
  post: PostEntry;
}

const {
  id,
  data: { title, image, date, type, description, tags },
} = Astro.props.post;
---

<div class="flex flex-col items-start p-4 gap-4 lg:gap-8 md:flex-row">
  {
    image && (
      <a href={`/blog/${id}/`}>
        <Image
          src={image}
          alt=""
          class="rounded-md w-full md:w-[200px] lg:w-[250px]"
        />
      </a>
    )
  }
  <div class="flex-1 flex flex-col">
    <Typo variant="h3" color="secondary">
      <a href={`/blog/${id}/`}>{title}</a></Typo
    >

    <div class="flex gap-2">
      <Typo variant="small" color="tertiary"><FormattedDate date={date} /></Typo
      >
      {
        type && (
          <Typo variant="small" color="tertiary">
            {type || "-"}
          </Typo>
        )
      }
    </div>
    {
      tags && (
        <div class="flex flex-wrap gap-2 mb-2">
          {tags.slice(0, 5).map((tag) => (
            <a href={`/tag/${tag}`}>
              <Badge variant="primary">{tag}</Badge>
            </a>
          ))}
        </div>
      )
    }
    <Typo variant="normal">
      {description}
    </Typo>
  </div>
</div>
